using Mcp.Net.LLM.Interfaces;

namespace Mcp.Net.Examples.WebUI.Input;

/// <summary>
/// Implements IUserInputProvider for web-based chat sessions
/// </summary>
public class WebUserInputProvider : IUserInputProvider
{
    private readonly ILogger<WebUserInputProvider> _logger;
    private string? _pendingMessage;
    private readonly SemaphoreSlim _messageSemaphore = new(0);

    public WebUserInputProvider(ILogger<WebUserInputProvider> logger)
    {
        _logger = logger;
    }

    /// <summary>
    /// Gets input from the user through the web interface
    /// </summary>
    public string GetUserInput()
    {
        // This will block until a message is received via ProvideUserInput
        _messageSemaphore.Wait();

        var message = _pendingMessage ?? string.Empty;
        _pendingMessage = null;

        _logger.LogDebug("Returning user input: {Message}", message);
        return message;
    }

    /// <summary>
    /// Called when a message is received from the web client
    /// </summary>
    public void ProvideUserInput(string message)
    {
        _logger.LogDebug("Received user input: {Message}", message);
        _pendingMessage = message;
        _messageSemaphore.Release();
    }
}
